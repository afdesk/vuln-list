{
  "id": "RUSTSEC-2023-0042",
  "modified": "2023-06-12T00:10:09Z",
  "published": "2023-06-11T12:00:00Z",
  "summary": "Ouroboros is Unsound",
  "details": "## Summary\n\nOuroboros has a soundness problem. A fix was attempted but \nunsuccessful, leaving the crate unmaintained. Migrate code to use \n[self_cell](https://github.com/Voultapher/self_cell) instead.\n\n## More details:\n\nCurrently, Ouroboros works internally by creating a struct where all \nuses of 'this are replaced by 'static. However, a recent addition to \nMiri checks that references passed to functions are valid during the \nentire execution of the function, even when those references are \npassed inside a struct. This poses an issue for dropping \nself-referencing values, as the reference becomes invalid during the \ndropping process. Effectively, since self-referencing structs are \nnot allowed in vanilla Rust, there is no allowance for dropping data\nduring a function that has also been given a reference to that data. \nThere's usually no way to pass a and \u0026a to the same function.\n\nA fix was attempted, where the struct would be turned in to a raw \nbyte array and only transformed back into the underlying data type \ninside each function. This is allowable as a reference can be \ncreated and die over the body of a function, as long as the \nreference was created inside the function. However, this is also \nnot sound if the original struct contains padding. There is no \nway to initialize padding bytes to a known value that Miri will \naccept, so when it is cast to an array some of the bytes contain \nuninitialized values. This is not acceptable (despite the fact \nthat these bytes are never read) due to the potential for \noptimizations that may read from the uninitialized bytes. Besides \nwhich, this fix does not allow for template or constant parameters \nas there is no way to check the size of a templated type without \ngiving specific, concrete values for the template parameters.\n\nThe crate at this point is no longer maintained, and previous\nusers should migrate their code to use \n[self_cell](https://github.com/Voultapher/self_cell) instead.",
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "ouroboros",
        "purl": "pkg:cargo/ouroboros"
      },
      "ranges": [
        {
          "type": "SEMVER",
          "events": [
            {
              "introduced": "0.0.0-0"
            }
          ]
        }
      ],
      "ecosystem_specific": {
        "affects": {
          "arch": [],
          "functions": [],
          "os": []
        }
      },
      "database_specific": {
        "categories": [],
        "cvss": null,
        "informational": "unsound",
        "source": "https://github.com/rustsec/advisory-db/blob/osv/crates/RUSTSEC-2023-0042.json"
      }
    }
  ],
  "references": [
    {
      "type": "PACKAGE",
      "url": "https://crates.io/crates/ouroboros"
    },
    {
      "type": "ADVISORY",
      "url": "https://rustsec.org/advisories/RUSTSEC-2023-0042.html"
    },
    {
      "type": "REPORT",
      "url": "https://github.com/joshua-maros/ouroboros/issues/88"
    }
  ]
}